<script type="text/javascript" xmlns="http://www.w3.org/1999/html">

(function(window,undefined){

   $(function() {

      // jquery history stuff
      var History = window.History; // Note: We are using a capital H instead of a lower h
      if ( !History.enabled ) {
         // History.js is disabled for this browser.
         // This is because we can optionally choose to support HTML4 browsers or not.
         return false;
      }

      // Bind to StateChange Event
      History.Adapter.bind(window,'statechange',function(){ // Note: We are using statechange instead of popstate
         var State = History.getState(); // Note: We are using History.getState() instead of event.state
         History.log(State.data, State.title, State.url);

         populate_node_tree(State.data.node);

      });

      // define global variables
      var gbl_current_scenario = 0;
      var gbl_current_node = 0;
      var gbl_previous_node = 0;
      var gbl_current_speaker; //ID
      var gbl_next_speaker_type = 0; // Index of 0 or 1; default to 0 or YOU

      var gbl_speaker_arr = [];
      var gbl_speaker_id_arr = [];


      $("#input-node").hide();
      $("#scenario_speaker_header").hide();

      //define user_id
      <% if session[:user_id] == nil || session[:user_id] == "" %>
         var gbl_user_id = 0; // guest user
      <% else %>
         var gbl_user_id = <%= session[:user_id] %>;
      <% end %>

   // BIND CLICK SCENARIO >> OPENING LINES

      var bind_scenario = function(jsonTarget){

         $(jsonTarget).click(function (event){
            //event.preventDefault();
            $(".nav.nav-list li").removeAttr("class");

            populate_nodes_by_scenario(parseInt(this.id.slice(0,-9)));

            $(this).parent().attr("class", "active");

            //return false;
         });
      };

      bind_scenario("#scenario_item a");

      // Populate SCENARIO

      var populate_nodes_by_scenario = function(scenario_id){

         // hide the next node text input
         $("#input-node").hide();
         // hide the speaker head
         $("#scenario_speaker_header").hide();


         var jsonUrl = "/nodes/initial.json?scenario_id="+scenario_id;
         $.getJSON(jsonUrl, function (json) {
            $("#debug").html(JSON.stringify(json));
            var html_input = "<p><h3>" + json.scenario.name + "</h3></p><p>"+ json.scenario.description+ "</p>"
            $("#scenario_desc").html(html_input);
            $("#tree_nodes").empty();

            // label speaker headers & define speaker global variables

            $.each(json.speakers, function(i, item) {
               $("#label-speaker" + i).html(item.name);

               gbl_speaker_arr[item.speaker_type]= item.name;
               gbl_speaker_id_arr[item.speaker_type]= item.id;
            });

            gbl_current_scenario = json.scenario.id;

            // add conversation start node
            var html_input = '<div class="span-center-inner"><p><button id="'+ json.start_node.id +'_tree">' + json.start_node.node_text + '</button></p></div>';
            $("#tree_nodes").append(html_input);
            format_node("#"+json.start_node.id+"_tree", json.start_node.speaker.speaker_type, false);

            bind_node_tree('#'+json.start_node.id +'_tree');


         // POPULATE NEXT NODES
            $("#next_nodes").empty();
            populate_next_nodes(json.next_nodes_0); // LEFT NODES
            populate_next_nodes(json.next_nodes_1); // RIGHT NODES
            populate_next_nodes(json.next_nodes_events);  // EVENT NODES

         });
      };

   // populate next nodes based on json input

      var populate_next_nodes = function(json){

         if (json.length > 0) {

            gbl_next_speaker_type = json[0].speaker.speaker_type;

            var html_input = '<div class="span-center-inner"><h3 id="next_speaker_'+gbl_next_speaker_type+'"></h3></div>';

            $.each(json, function(i, item) {

               html_input += '<div class="span-center-inner"><p><button type="submit" id="'+ item.id +'_next">' + item.node_text + '</button></p></div>';
               $("#next_nodes").append(html_input);
               $("#"+item.id+"_next").attr("class", "btn btn-info button");
               format_node("#"+item.id+"_next", item.speaker.speaker_type, false);
               html_input = '';
            });

            // $("#next_nodes").before();

            if (gbl_next_speaker_type === -1) {
               $('#next_speaker_'+gbl_next_speaker_type).html('Next Events:');
            } else {
               $('#next_speaker_'+gbl_next_speaker_type).html(gbl_speaker_arr[gbl_next_speaker_type] + " might say:");
            }

            $("#input-node").show();

            bind_node_tree("#next_nodes p button"); // bind click for next nodes
         }
      };

   // bind click for tree nodes
      var bind_node_tree = function (jqueryTarget) {
         $(jqueryTarget).click(function (event){
            event.preventDefault();
            var node_id = parseInt(this.id.split('_')[0]);

            History.pushState({node:node_id}, "Conversation Node "+node_id, "/scenarios?"+node_id);

            //populate_node_tree(node_id);
            //return false;
         });
      };


   // generate TREE NODES
      var populate_node_tree = function(node_id) {

         var jsonUrl = "/nodes/tree/"+node_id+".json?scenario_id="+gbl_current_scenario;
         $.getJSON(jsonUrl, function (json) {




         // POPULATE TREE

            // TODO: make this more efficient.
            $("#tree_nodes").empty();

            // JSON
            $.each(json.node_tree, function(i, item) {

               var html_input = '<div class="span-center-inner"><p><button id="'+ item.id +'_tree">' + item.node_text + '</button></p></div>';
                  $("#tree_nodes").append(html_input);
               // FORMAT NODE
               format_node("#"+item.id+"_tree", item.speaker.speaker_type, false);
               gbl_previous_node = item.id;

            });
            gbl_current_node = json.current_node.id;

         // CURRENT NODE

               var html_input = '<div class="span-center-current"><p><button id="'+ json.current_node.id +'_tree">' + json.current_node.node_text + '</button><br><div id="node_current_button_hover">Click to edit</div></p></div>';
               $("#tree_nodes").append(html_input);
               // FORMAT NODE
               format_node("#"+json.current_node.id+"_tree", json.current_node.speaker.speaker_type, false);


               // MOUSEOVER for CURRENT NODE
               $("#node_current_button_hover").hide();

               $('#'+ json.current_node.id +'_tree').mouseenter(function() {
                  $("#node_current_button_hover").show("slide", null, "fast", null);

               }).mouseleave(function() {
                          $("#node_current_button_hover").hide("slide", null, "fast", null);
               });


               // BIND EDIT action on CLICK
               $("#"+json.current_node.id+"_tree").click(function (event){
                  event.preventDefault();
                  $("#node_current_button_hover").hide();

                  var node_id = parseInt(this.id.split("_")[0]);

                  var html_textarea = '<div id="node_edit_group"><textarea rows="' +(($("#"+json.current_node.id+"_tree").height())/17+1) + '" id="node_edit_form" class="form-node-edit">'+json.current_node.node_text+'</textarea>' +
                          '<p class="tree-1"><button class="function-button" id="'+ json.current_node.id +'_delete">Delete</button> <button class="function-button" id="'+ json.current_node.id +'_cancel">Cancel</button></p></div>';


                  $(this).after(html_textarea);
                  $(this).hide();
                  $("#node_edit_form").width(Math.min($(this).width()+20,260));

               // CANCEL
                  $("#"+json.current_node.id+"_cancel").click(function (event){
                     $("#"+json.current_node.id+"_tree").show();
                     $("#node_edit_group").remove();
                  });

               // EDIT upon press ENTER
                  $("#node_edit_form").keypress(function(event) {
                     if(event.which == 13) {
                        event.preventDefault();
                        var dataString = 'node[node_text]=' + $("#node_edit_form").val();
                        $.ajax({
                           type: "PUT",
                           url: "nodes/"+gbl_current_node+"/",
                           data: dataString,
                           dataType: "json",
                           success: function(returnJSON) { //if node update success, then populate new node
                              $("#"+node_id+"_tree").show();
                              $("#"+node_id+"_tree").text($("#node_edit_form").val());
                              $("#node_edit_group").remove();
                           }
                        });
                     }
                  });
               // DELETE
                  $("#"+json.current_node.id +'_delete').click(function(event) {

                     event.preventDefault();
                     $.ajax({
                        type: "DELETE",
                        url: "nodes/"+gbl_current_node+"/",
                        data: null,
                        dataType: "json",
                        success: function(returnJSON) { //if node delete success, then jump to previous node
                           $("#node_edit_group").remove();
                           History.back();
                        }
                     });
                  });
               });

//
//               var html_current_node = "<div class=\"span-center-current\"><div>" +
//                       "<div class=\"btn-group\" id=\""+ json.current_node.id +"_group\">" +
//                       "<button id=\""+ json.current_node.id +"_tree\">" + json.current_node.node_text + "</button>" +
//                       "<button class=\"btn dropdown-toggle\" data-toggle=\"dropdown\">" +
//                       "<span class=\"caret\"></span></button></div> " +
//                       "<div id=\"node_options\"><a href=\"#\" id=\"" + json.current_node.id + "_edit\"> edit </a> | " +
//                       "<a href=\"#\" name=\"" + json.current_node.id + "\" id=\"node-delete\">delete</a> | tag   <div><div></div>";
//
//               $("#tree_nodes").append(html_current_node);
//
//               // FORMAT CURRENT NODE
//               format_node("#"+json.current_node.id+"_group", json.current_node.speaker.speaker_type,true);
//
//               // MOUSEOVER for CURRENT NODE
//               $("#node_options").hide();
//               $(".span-center-current").mouseenter(function() {
//                  $("#node_options").show("slide", null, "fast", null);
//
//               }).mouseleave(function() {
//                          $("#node_options").hide("slide", null, "fast", null);
//               });






            // BIND EDIT CURRENT NODE

//            $("#"+json.current_node.id+"_edit").click(function (event){
//               event.preventDefault();
//               var node_id = parseInt(this.id.slice(0,-5));
//               var html_textarea = "<textarea rows=\"3\" id=\"node_edit\" class=\"form-node-edit\">"+json.current_node.node_text+"</textarea>";
//               $(".span-center-current div .btn-group").after(html_textarea);
//               $(".span-center-current div .btn-group").hide();
//               $("#node_edit").width($(".span-center-current div .btn-group").width());
//               $("#node_edit").keypress(function(event) {
//                  if(event.which == 13) {
//                     event.preventDefault();
//                     var dataString = 'node[node_text]=' + $("#node_edit").val();
//                     $.ajax({
//                        type: "PUT",
//                        url: "nodes/"+gbl_current_node+"/",
//                        data: dataString,
//                        dataType: "json",
//                        success: function(returnJSON) { //if node update success, then populate new node
//                           $(".span-center-current div .btn-group").show();
//                           $("#"+gbl_current_node+"_tree").text($("#node_edit").val());
//                           $("#node_edit").remove();
//                        }
//                     });
//                  }
//               });
//            });
//
//            $("#node-delete").click(function (event){
//               event.preventDefault();
//
//
//               // need to check child nodes
//
//               var node_id = parseInt(this.name);
//               var html_textarea = "Are you sure you wish to delete this node? <a href=\"#\" id=\"node-delete-yes\">YES</a> | NO";
//               $(".span-center-current div .btn-group").after(html_textarea);
//               $(".span-center-current div .btn-group").hide();
//
//               $("#node-delete-yes").click(function(event) {
//
//                  event.preventDefault();
//                  $.ajax({
//                     type: "DELETE",
//                     url: "nodes/"+gbl_current_node+"/",
//                     data: null,
//                     dataType: "json",
//                     success: function(returnJSON) { //if node delete success, then jump to previous node
//                        $(".span-center-current div .btn-group").remove();
//
//                        $("#node-delete-yes").remove();
//                        $("#node_options-yes").remove();
//                        History.back();
//                     }
//                  });
//               });
//            });




            bind_node_tree("#tree_nodes div div button");

            // DETERMINE CURRENT SPEAKER

            gbl_next_speaker_type = Math.abs((json.current_node.speaker.speaker_type)-1);

            // SHOW SPEAKER HEADER
            $("#scenario_speaker_header").show();

            // BIND CLICK for TREE NODES
            bind_node_tree("#tree_nodes p button");


            // POPULATE NEXT NODES
            $("#next_nodes").empty();
            populate_next_nodes(json.next_nodes_0);
            populate_next_nodes(json.next_nodes_1);
            populate_next_nodes(json.next_nodes_events);


         });
      };


   // FORMAT NODE ACCORDING TO SPEAKER
      var format_node = function (jqueryTarget, speaker_type, boolCurrent){
         // format CSS

            $(jqueryTarget).parent().attr("class", "tree-"+speaker_type);

            if (boolCurrent){
               $(jqueryTarget+" button:nth-child(1)").attr("class", "node-button node-"+speaker_type+" node-left");
               $(jqueryTarget+" button:nth-child(2)").attr("class", "node-button node-"+speaker_type+" dropdown-toggle");
            } else {
               $(jqueryTarget).attr("class", "node-button node-"+speaker_type+" node-normal");
            }

         if (boolCurrent){
            if ($(jqueryTarget+" button:nth-child(1)").width() > 180) {
               $(jqueryTarget+" button:nth-child(1)").width(180);

            }
            $(jqueryTarget+" button:nth-child(2)").height($(jqueryTarget+" button:nth-child(1)").height()+8);

         } else if (speaker_type >= 0) {
            if ($(jqueryTarget).width() > 180) {
               $(jqueryTarget).width(180);

            }
         }
      };


   // bind insert action when user presses enter in new node text box

      $("#node_new").keypress(function(event) {
         if(event.which == 13) {
            //alert('You pressed enter!');
            event.preventDefault();

            var speaker_type = $('input:checked').val();

//            var dataString = 'node[node_text]=' + $("#node_new").val() + '&node[previous_node_id]=' + gbl_current_node + '&node[scenario_id]=' + gbl_current_scenario + "&node[speaker_id]=" + gbl_speaker_id_arr[gbl_next_speaker_type] + "&node[user_id]=" + gbl_user_id + "&node[node_type]=1";
            var dataString = 'node[node_text]=' + $("#node_new").val() + '&node[previous_node_id]=' + gbl_current_node + '&node[scenario_id]=' + gbl_current_scenario + "&node[speaker_id]=" + gbl_speaker_id_arr[speaker_type] + "&node[user_id]=" + gbl_user_id + "&node[node_type]=1";



            $.ajax({
               type: "POST",
               url: "nodes/",
               data: dataString,
               dataType: "json",
               success: function(returnJSON) { //if node creation success, then populate new node

                  $("#debug").html(JSON.stringify(returnJSON));

                  var html_input = "<div class=\"span-center-inner\"><p><button type=\"submit\" id=\""+ returnJSON.id + "_next\">" + $("#node_new").val() + "</button></p></div>";
                  $("#next_nodes").append(html_input);

                  format_node("#"+returnJSON.id+"_next",gbl_speaker_arr[gbl_next_speaker_type], false);

                  bind_node_tree("#next_nodes p button");
                  $("#node_new").val('');
               }
            });

         }
      });

   });

})(window);
</script>


<div class="row">
   <div class="span4">
     <div class="well sidebar-nav">
       <ul class="nav nav-list">
         <li class="nav-header" id="scenario_nav">Scenarios<br></li>
         <% @scenarios.each do |scenario| %>
         <li id="scenario_item"><a href="#" id="<%= scenario.id %>_scenario"><%= scenario.name %></a></li>
         <% end %>
         <li></li>

         <li class="nav-header" id="scenario_new"><%= link_to 'New Scenario', new_scenario_path %><br></li>

       </ul>
     </div><!--/.well -->
   </div><!--/span-->
  <div class="span-center">
    <div class="span-center-inner">
      <div id="scenario_desc"></div>
    </div>
    <div id="start_node"></div>
    <div class="span-center-inner">
       <div id="scenario_speaker_header">
         <table width="100%"><tr><td width="50%"><h4 id="label-speaker0"></h4></td><td width="50%" align="right"><h4 id="label-speaker1"></h4></td> </tr></table>
       </div>
    </div>

    <div id="tree_nodes"></div>



    <div id="next_nodes"></div>


    <div id="input-node">
      <textarea rows="3" id="node_new" class="form-node" placeholder="Suggest something to say..."></textarea>
      <input type="radio" id="speaker_type_0" name="speaker_type" value="0" checked> You<br>
      <input type="radio" id="speaker_type_1" name="speaker_type" value="1"> Girl<br>
      <input type="radio" id="speaker_type_-1" name="speaker_type" value="-1"> Event<br>

    </div>
  </div>
  <div class="span4"></div>
</div>

<div id="debug"></div>


